version: 2.1

description: |
  Orb for interacting with Amazon Elastic Container Registry (ECR) from within
  a CircleCI build job.

  The executors within this Orb provide run-time environments that contain the
  necessary dependencies for executing the jobs and commands in this orb,
  except for the following required dependencies that must be configured in
  CircleCI in order to use this orb
    * AWS_ACCESS_KEY_ID - environment variable for AWS login
    * AWS_SECRET_ACCESS_KEY - environment variable for AWS login

  See CircleCI documentation for instructions on storing environment variables
  in either your Project settings or in a Context
    * https://circleci.com/docs/2.0/env-vars

  If set, the following optional environment variables will serve as default 
  values
    * AWS_ECR_ACCOUNT_URL

  The source repo for this Orb can be found here:
  https://github.com/CircleCI-Public/circleci-orbs/aws-ecr-orb

  Sample usage within config.yml:

  workflows:
    build_and_push_image:
      jobs:
        - aws-ecr/build_and_push_image:
            context: myContext
            region: us-west-2
            account-url: myAwsAccountNum.dkr.ecr.myRegion.amazonaws.com 
            repo: myRepo
            tag: latest

orbs:
  aws-cli: circleci/aws-cli@0.0.1

executors:
  default:
    docker:
      - image: circleci/python:3-stretch-browsers

commands:
  ecr-login:
    description: "Authenticate into the Amazon ECR service"
    parameters: 
      region: 
        type: string
        default: "us-east-1"
    steps:
      - run:
          name: Log into Amazon ECR
          command: "$(aws ecr get-login --no-include-email --region <<parameters.region>> )"
  build-image:
    description: "Build a docker image"
    parameters:
      account-url:
        type: string
        description: The Amazon ECR account URL that maps to an AWS account,
                     e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
        default: $AWS_ECR_ACCOUNT_URL
      repo:
        type: string
        description: Name of an Amazon ECR repository
      tag:
        description: A docker image tag (default = latest)
        type: string
        default: "latest"
    steps:
      - run:
          name: Push image to Amazon ECR
          command: "docker push <<parameters.account-url>>/<<parameters.repo>>:<<parameters.tag>>"

jobs:
  build_and_push_image:
    description: Install AWS CLI, if needed, and configure. Log into Amazon ECR
                 and push image to repository.
    executor: default
    parameters: 
      profile-name:
        description: AWS profile name to be configured.
        type: string
        default: "default"
      aws-access-key-id:
        description: AWS access key id for IAM role. Set this to the name of
                     the environment variable you will set to hold this
                     value, i.e. $AWS_ACCESS_KEY.
        type: string
        default: $AWS_ACCESS_KEY_ID
      aws-secret-access-key:
        description: AWS secret key for IAM role. Set this to the name of
                     the environment variable you will set to hold this
                     value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: string
        default: $AWS_SECRET_ACCESS_KEY
      region: 
        type: string
        description: AWS region to use with the commands (default = us-east-1)
        default: "us-east-1"
      account-url:
        type: string
        description: The Amazon ECR account URL that maps to an AWS account,
                     e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
        default: $AWS_ECR_ACCOUNT_URL
      repo:
        type: string
        description: Name of an Amazon ECR repository
      tag:
        description: A docker image tag (default = latest)
        type: string
        default: "latest"
    steps:
      - aws-cli/install
      - aws-cli/configure: 
          profile-name: << parameters.profile-name >>
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          region: << parameters.region >>
      - checkout
      - setup_remote_docker
      - ecr-login:
          region: << parameters.region >>
      - build-image:
          account-url: << parameters.account-url >>
          repo: << parameters.repo >>
          tag: << parameters.tag >> 
      - push-image:
          account-url: << parameters.account-url >>
          repo: << parameters.repo >>
          tag: << parameters.tag >> 
