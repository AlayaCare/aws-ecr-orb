version: 2.1

description: >
  Build images and push them to the Amazon Elastic Container Registry

examples:
  simple_build_and_push:
    description: Log into AWS, build and push image to Amazon ECR

    usage:
      version: 2.1

      orbs:
        aws-ecr: circleci/aws-ecr@1.0.0

      workflows:
        build_and_push_image:
          jobs:
            - aws-ecr/build_and_push_image:
                context: myContext # your context containing AWS variables
                repo: myRepo # your Amazon ECR repository
                tag: latest

orbs:
  aws-cli: circleci/aws-cli@0.1.7

executors:
  default:
    docker:
      - image: circleci/python:3-stretch-browsers

commands:
  ecr-login:
    description: "Authenticate into the Amazon ECR service"

    parameters:
      region:
        description: >
          Name of env var storing your AWS region information,
          defaults to AWS_REGION
        type: env_var_name
        default: AWS_REGION

    steps:
      - run:
          name: Log into Amazon ECR
          command: aws ecr get-login --no-include-email --region $<< parameters.region >>

  build-image:
    description: "Build a docker image"

    parameters:
      account-url:
        type: env_var_name
        description: >
          The Amazon ECR account URL that maps to an AWS account,
          e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
        default: AWS_ECR_ACCOUNT_URL

      repo:
        type: string
        description: Name of an Amazon ECR repository

      tag:
        description: A docker image tag (default = latest)
        type: string
        default: "latest"

      dockerfile:
        description: Name of dockerfile to use. Defaults to Dockerfile.
        type: string
        default: Dockerfile

      path:
        description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).
        type: string
        default: .

    steps:
      - run:
          name: Build docker image
          command: docker build -f << parameters.dockerfile >> -t $<< parameters.account-url >>/<< parameters.repo >>:<< parameters.tag >> << parameters.path >>

  push-image:
    description: "Push a container image to the Amazon ECR registry"

    parameters:
      account-url:
        type: env_var_name
        description: >
          Env var storing Amazon ECR account URL that maps to an AWS account,
          e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
          defaults to AWS_ECR_ACCOUNT_URL
        default: AWS_ECR_ACCOUNT_URL

      repo:
        type: string
        description: Name of an Amazon ECR repository

      tag:
        description: A docker image tag (default = latest)
        type: string
        default: "latest"

    steps:
      - run:
          name: Push image to Amazon ECR
          command: "docker push $<< parameters.account-url >>/<< parameters.repo >>:<< parameters.tag >>"

jobs:
  build_and_push_image:
    description: >
      Install AWS CLI, if needed, and configure. Log into Amazon ECR
      and push image to repository. Requires environment variables
      for AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. We recommend
      these be saved in a Project (https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project)
      or in Contexts (https://circleci.com/docs/2.0/contexts/).
    executor: default

    parameters:
      profile-name:
        description: AWS profile name to be configured.
        type: string
        default: "default"

      aws-access-key-id:
        description: >
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will set to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
        default: AWS_ACCESS_KEY_ID

      aws-secret-access-key:
        description: >
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will set to hold this
          value, i.e. AWS_SECRET_ACCESS_KEY.
        type: env_var_name
        default: AWS_SECRET_ACCESS_KEY

      region:
        description: >
          Name of env var storing your AWS region information,
          defaults to AWS_REGION
        type: env_var_name
        default: AWS_REGION

      account-url:
        type: env_var_name
        description: >
          Env var storing Amazon ECR account URL that maps to an AWS account,
          e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
          defaults to AWS_ECR_ACCOUNT_URL
        default: AWS_ECR_ACCOUNT_URL

      repo:
        type: string
        description: A URI to an Amazon ECR repository

      tag:
        type: string
        description: Docker tag (default = latest)
        default: "latest"

    steps:
      - aws-cli/install

      - aws-cli/configure:
          profile-name: << parameters.profile-name >>
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: << parameters.region >>

      - checkout

      - setup_remote_docker

      - ecr-login:
          region: << parameters.region >>

      - build-image:
          account-url: << parameters.account-url >>
          repo: << parameters.repo >>
          tag: << parameters.tag >>

      - push-image:
          account-url: << parameters.account-url >>
          repo: << parameters.repo >>
          tag: << parameters.tag >>
