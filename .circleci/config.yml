version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.7
  aws-ecr: circleci/aws-ecr@dev:alpha

executors:
  ci-base:
    resource_class: small
    docker:
      - image: cibuilds/base

  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli

  lint-condo:
    resource_class: small
    docker:
      - image: singapore/lint-condo

jobs:
  lint:
    executor: lint-condo
    steps:
      - checkout
      - run: yamllint .

  validate:
    executor: cli
    steps:
      - checkout
      - run: circleci orb validate src/@orb.yml

  publish-dev:
    executor: cli
    steps:
      - checkout

      - run:
          name: publish dev versions
          command: |
            # for integration testing
            circleci orb publish src/@orb.yml circleci/aws-ecr@dev:alpha --token $CIRCLE_TOKEN

            # for transparency
            circleci orb publish src/@orb.yml circleci/aws-ecr@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

            # for potentially promoting to prod
            circleci orb publish src/@orb.yml circleci/aws-ecr@dev:${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

      - store_artifacts:
          path: src/@orb.yml

  trigger-integration:
    executor: ci-base
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "54:b8:9b:79:74:29:3e:dd:95:52:4d:4b:e6:8b:38:f2"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - run: |
          INTEGRATION_TAG=<<parameters.tag>>-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
          git tag $INTEGRATION_TAG
          git push origin $INTEGRATION_TAG

  # setup-infrastructure:
  #   executor: aws-cli/default
  #   steps:
  #     - aws-cli/install

  #     - aws-cli/configure:
  #         aws-region: AWS_REGION

  #     -

  dev-promote-prod:
    executor: cli
    steps:
      - checkout
      - run: circleci orb publish promote circleci/aws-ecr@dev:${CIRCLE_SHA1:0:7} patch --token $CIRCLE_TOKEN

# yaml anchors
integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

integration-post-steps: &integration-post-steps
  [run: "aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7} --force"]

workflows:
  lint_validate_deploy-dev:
    jobs:
      - lint

      - validate:
          requires:
            - lint

      - publish-dev:
          context: orb-publishing
          requires:
            - validate

      - trigger-integration:
          name: trigger-integration-dev
          requires:
            - publish-dev
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          tag: master
          requires:
            - publish-dev
          filters:
            branches:
              only: master

  integration-tests_deploy-prod:
    jobs:
      # triggered by non-master branch commits
      - aws-ecr/build_and_push_image:
          name: integration-tests-dev
          context: orb-publishing
          repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}
          create-repo: true
          tag: integration-dev
          filters: *integration-dev_filters
          post-steps: *integration-post-steps

      # triggered by master branch commits
      - aws-ecr/build_and_push_image:
          name: integration-tests-master
          context: orb-publishing
          repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}
          create-repo: true
          tag: integration-master
          filters: *integration-master_filters
          post-steps: *integration-post-steps

      - dev-promote-prod:
          context: orb-publishing
          filters: *integration-master_filters
          requires:
            - integration-tests-master
